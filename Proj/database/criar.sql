PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

DROP TABLE IF EXISTS User;
CREATE TABLE User(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Name TEXT NOT NULL ON CONFLICT ABORT,
  DateOfBirth DATE NOT NULL ON CONFLICT ABORT,
  
  PRIMARY KEY(UserId),
  
  CHECK (date('now')-birthDate > 18)
);

DROP TABLE IF EXISTS Tourist;
CREATE TABLE Tourist(
  TouristId INTEGER,
  
  FOREIGN KEY(TouristId) REFERENCES User(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(TouristId)
);c

DROP TABLE IF EXISTS Owner;
CREATE TABLE Owner(
  OwnerId INTEGER,
  
  FOREIGN KEY(OwnerId) REFERENCES User(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(OwnerId)
);

DROP TABLE IF EXISTS Available;
CREATE TABLE Available(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  StartDate DATE NOT NULL ON CONFLICT ABORT,
  EndDate DATE NOT NULL ON CONFLICT ABORT,

  PRIMARY KEY(Id),
  
  CHECK(EndDate > StartDate)
);

DROP TABLE IF EXISTS House;
CREATE TABLE House(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Rating INTEGER DEFAULT(NULL),
  Description TEXT DEFAULT(NULL),
  Discount INTEGER NOT NULL ON CONFLICT ABORT,
  PricePerDay INTEGER,  
  OwnerId INTEGER,
  AvailableId INTEGER,
  LocationId INTEGER,
  
  FOREIGN KEY(AvailableId) REFERENCES Available(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(OwnerId) REFERENCES Owner(OwnerId) ON DELETE SET NULL	ON UPDATE CASCADE,
  FOREIGN KEY(LocationId) REFERENCES Location(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(Id),
  
  CHECK(rating >= 1 AND rating <= 5),
  CHECK(discount < 1)
);

DROP TABLE IF EXISTS Country;
CREATE TABLE Country(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Name TEXT NOT NULL ON CONFLICT ABORT,
  ISO TEXT NOT NULL ON CONFLICT ABORT,
  
  PRIMARY KEY
);

DROP TABLE IF EXISTS City;
CREATE TABLE City(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Name TEXT NOT NULL ON CONFLICT ABORT,
  CountryId INTEGER,
  
  FOREIGN KEY(CountryId) REFERENCES Country(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(Id)
);

DROP TABLE IF EXISTS Location;
CREATE TABLE Location(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Adress TEXT NOT NULL ON CONFLICT ABORT,
  PostalCode TEXT NOT NULL ON CONFLICT ABORT,
  CityId INTEGER,
  
  FOREIGN KEY(CityId) REFERENCES City(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(Id)
);

DROP TABLE IF EXISTS Login;
CREATE TABLE Login(
  Username TEXT NOT NULL ON CONFLICT ABORT,
  Password TEXT NOT NULL ON CONFLICT ABORT,
  Email TEXT NOT NULL ON CONFLICT ABORT,
  UserId INTEGER,
  
  FOREIGN KEY(UserId) REFERENCES User(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(UserId)
);

DROP TABLE IF EXISTS Comment;
CREATE TABLE Comment(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Text TEXT NOT NULL ON CONFLICT ABORT,
  Date DATE NOT NULL ON CONFLICT ABORT,

  PRIMARY KEY(Id)
);

DROP TABLE IF EXISTS Commodity;
CREATE TABLE Commodity(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Description TEXT NOT NULL ON CONFLICT ABORT,
  Type TEXT NOY NULL ON CONFLICT ABORT,
  HouseId INTEGER,
  
  FOREIGN KEY(HouseId) REFERENCES House(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(Id)
);

DROP TABLE IF EXISTS Photo;
CREATE TABLE Photo(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Description TEXT NOT NULL ON CONFLICT ABORT,
  HouseId INTEGER,
  
  FOREIGN KEY(HouseId) REFERENCES House(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(Id)
);

DROP TABLE IF EXISTS Rent;
CREATE TABLE Rent(
  NumberOfDays INTEGER NOT NULL ON CONFLICT ABORT,
  StartDate DATE NOT NULL ON CONFLICT ABORT,
  EndDate DATE NOT NULL ON CONFLICT ABORT,
  Price INTEGER NOT NULL ON CONFLICT ABORT,
  HouseId INTEGER,
  TouristId INTEGER,
  
  FOREIGN KEY(HouseId) REFERENCES House(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(TouristId) REFERENCES Tourist(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(RentId)
);

DROP TABLE IF EXISTS Review;
CREATE TABLE Review(
  Id INTEGER NOT NULL ON CONFLICT ABORT,
  Rating INTEGER DEFAULT(NULL),
  RentId INTEGER,
  HouseId INTEGER,
  
  FOREIGN KEY(RentId) REFERENCES Rent(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(HouseId) REFERENCES House(Id) ON DELETE SET NULL ON UPDATE CASCADE,
  PRIMARY KEY(Id),

  CHECK(rating >= 1 AND rating <= 5)
);


